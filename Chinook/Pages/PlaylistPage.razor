@page "/playlist/{PlaylistId:long}"
@attribute [Authorize]
@using Chinook.Models
@using Chinook.Shared.Common
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims;

@if (!string.IsNullOrWhiteSpace(InfoMessage))
{
    <div class="alert alert-info fade show">
        <div class="d-flex align-items-start">
            <div class="flex-grow-1">
                @InfoMessage
            </div>
            <button type="button" class="btn-close" aria-label="Close" @onclick="CloseInfoMessage"></button>
        </div>
    </div>
}

@if (!string.IsNullOrWhiteSpace(ErrorMessage))
{
    <div class="alert alert-danger fade show">
        <div class="d-flex align-items-start">
            <div class="flex-grow-1">
                @ErrorMessage
            </div>
            <button type="button" class="btn-close" aria-label="Close" @onclick="CloseErrorMessage"></button>
        </div>
    </div>
}

@if (Playlist == null)
{
    <Loading />
}
else
{
    <h1>Playlist <strong>@(ConstantName.GetPlaylistName(Playlist.Name)) </strong></h1>
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Track</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Track in Playlist.Tracks)
            {
                <tr>
                    <td>@Track.ArtistName - @Track.AlbumTitle - @Track.TrackName</td>
                    <td>
                        <div class="d-flex">
                            @if (Playlist.Name != ConstantName.FAVORITE_PLAYLIST_NAME)
                            {
                                @if (Track.IsFavorite)
                                {
                                    <a href="#" class="m-1" title="Unark as favorite" @onclick="@(() => UnfavoriteTrack(Track.TrackId))" @onclick:preventDefault><i class="bi bi-star-fill"></i></a>
                                }
                                else
                                {
                                    <a href="#" class="m-1" title="Mark as favorite" @onclick="@(() => FavoriteTrack(Track.TrackId))" @onclick:preventDefault><i class="bi bi-star"></i></a>
                                }

                            }
                            <a href="#" class="m-1" title="Remove from this playlist" @onclick="@(() => ShowDeleteDialog(Track))" @onclick:preventDefault><i class="bi bi-trash"></i></a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<Modal @ref="DeleteConfirmationDialog">
    <Title>Delete Track from playlist</Title>
    <Body>
        @if (!string.IsNullOrWhiteSpace(DeleteDialogErrorMessage))
        {
            <div class="alert alert-danger fade show">
                <div class="d-flex align-items-start">
                    <div class="flex-grow-1">
                        @DeleteDialogErrorMessage
                    </div>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="CloseModalErrorMessage"></button>
                </div>
            </div>
        }
        <p>Do you want to delete the track "@(TrackToDelete?.TrackName)" from the playlist "@(Playlist?.Name == ConstantName.FAVORITE_PLAYLIST_NAME ? ConstantName.FAVORITE_PLAYLIST_DISPLAY_NAME : Playlist?.Name)"? </p>
    </Body>
    <Footer>
        <button class="btn btn-success" @onclick="@(() => RemoveTrack(TrackToDelete.TrackId))">Remove</button>
    </Footer>
</Modal>


